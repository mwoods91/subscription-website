{"version":3,"file":"static/js/27.c71c35f7.chunk.js","mappings":"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","sources":["components/TextField.js","pages/UnAuthenticatedPages/Register/ExistingRegister/Form.js","pages/UnAuthenticatedPages/Register/ExistingRegister/RegisterWrapper.js","pages/UnAuthenticatedPages/Register/ExistingRegister/index.js"],"sourcesContent":["/**\r\n * @author  Mark Woods\r\n */\r\n\r\nimport React from 'react';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst MuiTextField = (props) => {\r\n  const { name, label, value, onChange, type, ...other } = props;\r\n  return (\r\n    <TextField\r\n      sx={{ '& .MuiInputBase-root': { height: 29, Width: 100 } }}\r\n      fullWidth\r\n      variant=\"outlined\"\r\n      InputLabelProps={{ shrink: true }}\r\n      label={label}\r\n      value={value}\r\n      onChange={onChange}\r\n      name={name}\r\n      type={type}\r\n      {...other}\r\n    ></TextField>\r\n  );\r\n};\r\n\r\nexport default MuiTextField;\r\n","/* eslint-disable react/no-unescaped-entities */\r\nimport React, { useState, useContext } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-hot-toast';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Box, Grid, InputAdornment, Typography, Button } from '@mui/material/';\r\nimport { UserContext } from '../../../../contexts/UserContext';\r\nimport DatePicker from 'react-mobile-datepicker';\r\n//3rd party\r\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\r\n\r\n//project imports\r\nimport MuiTextField from '../../../../components/TextField';\r\n\r\nconst Form = () => {\r\n  const [state, setState] = useContext(UserContext);\r\n\r\n  const navigate = useNavigate();\r\n  const formik = useFormik({\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    initialValues: {\r\n      client_reference_id: '237875695',\r\n      dob: '1991-01-15',\r\n      fullname: 'Mark Woods',\r\n      email: 'markwoods9@hotmail.com',\r\n      phone: '0877767940'\r\n      // password: ''\r\n    },\r\n    validate: (values) => {\r\n      let errors = {};\r\n      if (values.client_reference_id.trim() === '') {\r\n        errors.client_reference_id = 'G Pace ID required. This is on your plastic ID card';\r\n      }\r\n\r\n      if (values.dob.trim() === '') {\r\n        errors.dob = 'DOB required';\r\n      }\r\n      if (values.phone.trim() === '') {\r\n        errors.phone = 'Mobile number required';\r\n      }\r\n      if (values.email.trim() === '') {\r\n        errors.email = 'Email address required';\r\n      }\r\n\r\n      return errors;\r\n    },\r\n    onSubmit: async (values) => {\r\n      try {\r\n        await axios.post('/register', {\r\n          client_reference_id: values.client_reference_id,\r\n          dob: values.dob,\r\n          fullname: values.fullname,\r\n          email: values.email,\r\n          phone: values.phone\r\n        });\r\n        if (values.error) {\r\n          toast.error(values.error);\r\n        } else {\r\n          toast.success(`You have successsfully registered`);\r\n          setState(values);\r\n          localStorage.setItem('auth', JSON.stringify(values));\r\n          navigate('/login');\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        toast.error('Something went wrong. Try again');\r\n      }\r\n    }\r\n  });\r\n  return (\r\n    <Box>\r\n      <Box marginBottom={4}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          sx={{\r\n            fontWeight: 700\r\n          }}\r\n        >\r\n          Register with HRI PLUS today\r\n        </Typography>\r\n        <Typography color=\"text.secondary\">\r\n          *Please use HRI ID and DOB supplied on the ID card issued to you so we can check if your account exists*\r\n        </Typography>\r\n      </Box>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={6}>\r\n            <MuiTextField\r\n              label=\"HRI ID\"\r\n              id=\"client_reference_id\"\r\n              type=\"text\"\r\n              name=\"client_reference_id\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.client_reference_id}\r\n              error={Boolean(formik.errors.client_reference_id)}\r\n              helperText={formik.errors.client_reference_id}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <MuiTextField\r\n              label=\"DOB\"\r\n              id=\"dob\"\r\n              type=\"date\"\r\n              name=\"dob\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.dob}\r\n              error={Boolean(formik.errors.dob)}\r\n              helperText={formik.errors.dob}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <MuiTextField\r\n              label=\"Full name\"\r\n              id=\"fullname\"\r\n              type=\"text\"\r\n              name=\"fullname\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.fullname}\r\n              error={Boolean(formik.errors.fullname)}\r\n              helperText={formik.errors.fullname}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid sx={{ mt: 0.2 }} container spacing={2}>\r\n          <Grid item xs={12} md={6}>\r\n            <MuiTextField\r\n              label=\"Mobile Number\"\r\n              id=\"phone\"\r\n              type=\"text\"\r\n              name=\"phone\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.phone}\r\n              error={Boolean(formik.errors.phone)}\r\n              helperText={formik.errors.phone}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <MuiTextField\r\n              label=\"Email Address\"\r\n              id=\"email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.email}\r\n              error={Boolean(formik.errors.email)}\r\n              helperText={formik.errors.email}\r\n            />\r\n          </Grid>\r\n\r\n          {/* <Grid item xs={12}>\r\n            <MuiTextField\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              color={capsWarning ? 'warning' : 'primary'}\r\n              id=\"-password-login\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              onChange={formik.handleChange}\r\n              value={formik.values.password}\r\n              onBlur={(event) => {\r\n                setCapsWarning(false);\r\n              }}\r\n              error={Boolean(formik.errors.password)}\r\n              helperText={formik.errors.password}\r\n              onKeyDown={onKeyDown}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment sx={{ cursor: 'pointer' }} onClick={handleClickShowPassword} position=\"end\">\r\n                    {showPassword ? <EyeOutlined /> : <EyeInvisibleOutlined />}\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n            {capsWarning && !formik.errors.password && (\r\n              <Typography variant=\"caption\" sx={{ color: 'warning.main' }} id=\"warning-helper-text-password-login\">\r\n                Caps lock on!\r\n              </Typography>\r\n            )}\r\n          </Grid> */}\r\n\r\n          <Grid item container xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              flexDirection={{ xs: 'column', sm: 'row' }}\r\n              alignItems={{ xs: 'stretched', sm: 'center' }}\r\n              justifyContent={'space-between'}\r\n              width={1}\r\n              maxWidth={600}\r\n              margin={'0 auto'}\r\n            >\r\n              <Button size={'large'} variant={'contained'} type={'submit'}>\r\n                Proceed to account\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Container } from '@mui/material';\r\nimport Form from './Form';\r\n\r\n// ==============================|| AUTHENTICATION - WRAPPER ||============================== //\r\n\r\nconst RegisterWrapper = () => {\r\n  const RegisterImage = require('../../../../assets/images/Register/Register.jpeg');\r\n\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: 1,\r\n        height: 1,\r\n        overflow: 'hidden'\r\n      }}\r\n    >\r\n      <Container>\r\n        <Box display={'flex'} flexDirection={{ xs: 'column', md: 'row' }} position={'relative'}>\r\n          <Box width={1} order={{ xs: 2, md: 1 }} display={'flex'} alignItems={'center'}>\r\n            <Container>\r\n              <Form />\r\n            </Container>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              flex: { xs: '0 0 100%', md: '0 0 50%' },\r\n              position: 'relative',\r\n              maxWidth: { xs: '100%', md: '50%' },\r\n              order: { xs: 1, md: 2 },\r\n              minHeight: { xs: 'auto', md: 'calc(100vh - 58px)' }\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                width: { xs: 1, md: '50vw' },\r\n                height: '100%',\r\n                position: 'relative'\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  width: '100%',\r\n                  height: '100%',\r\n                  overflow: 'hidden'\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    overflow: 'hidden',\r\n                    left: '0%',\r\n                    width: 1,\r\n                    height: 1,\r\n                    position: { xs: 'relative', md: 'absolute' },\r\n                    clipPath: {\r\n                      xs: 'none',\r\n                      md: 'polygon(10% 0%, 100% 0, 100% 100%, 0% 100%)'\r\n                    },\r\n                    shapeOutside: {\r\n                      xs: 'none',\r\n                      md: 'polygon(10% 0%, 100% 0, 100% 100%, 0% 100%)'\r\n                    }\r\n                  }}\r\n                >\r\n                  <Box\r\n                    sx={{\r\n                      height: { xs: 'auto', md: 1 },\r\n                      '& img': {\r\n                        objectFit: 'cover'\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Box\r\n                      component={'img'}\r\n                      loading=\"lazy\"\r\n                      src={RegisterImage}\r\n                      height={{ xs: 'auto', md: 1 }}\r\n                      maxHeight={{ xs: 300, md: 1 }}\r\n                      width={1}\r\n                      maxWidth={1}\r\n                      sx={{ opacity: '75%', filter: theme.palette.mode === 'dark' ? 'brightness(0.7)' : 'none' }}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nRegisterWrapper.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default RegisterWrapper;\r\n","import React from 'react';\r\nimport RegisterWrapper from './RegisterWrapper';\r\nimport { Container } from '@mui/material';\r\n\r\nconst RegisterExisting = () => {\r\n  return (\r\n    <Container sx={{ mt: 10 }}>\r\n      <RegisterWrapper />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterExisting;\r\n"],"names":["props","name","label","value","onChange","type","other","sx","height","Width","fullWidth","variant","InputLabelProps","shrink","useContext","UserContext","setState","navigate","useNavigate","formik","useFormik","validateOnBlur","validateOnChange","initialValues","client_reference_id","dob","fullname","email","phone","validate","values","errors","trim","onSubmit","axios","error","toast","localStorage","setItem","JSON","stringify","console","log","Box","marginBottom","Typography","fontWeight","color","handleSubmit","Grid","container","spacing","item","xs","md","id","handleChange","Boolean","helperText","mt","display","flexDirection","sm","alignItems","justifyContent","width","maxWidth","margin","Button","size","RegisterImage","require","theme","useTheme","overflow","Container","position","order","flex","minHeight","left","clipPath","shapeOutside","objectFit","component","loading","src","maxHeight","opacity","filter","palette","mode"],"sourceRoot":""}