{"version":3,"file":"static/js/747.b01f3880.chunk.js","mappings":"mTAUMA,EAAU,CACd,CACEC,OAAQ,OACRC,SAAU,OACVC,MAAO,QAET,CACEF,OAAQ,aACRC,SAAU,YACVC,MAAO,QAET,CACEF,OAAQ,SACRC,SAAU,cACVC,MAAO,OAGPC,KAAM,YACJ,OADY,EAALC,OAEL,KAAK,EACH,OAAO,SAACC,EAAA,EAAI,CAACC,MAAM,UAAUC,MAAM,UAAUC,KAAK,QAAQC,QAAQ,UACpE,KAAK,EACH,OAAO,SAACJ,EAAA,EAAI,CAACC,MAAM,UAAUC,MAAM,aAAaC,KAAK,QAAQC,QAAQ,UAEvE,QACE,OAAO,SAACJ,EAAA,EAAI,CAACC,MAAM,UAAUC,MAAM,OAAOC,KAAK,QAAQC,QAAQ,UAErE,IAGEC,EAAO,CACX,CACEC,GAAI,EACJC,KAAM,UACNC,UAAW,aACXC,YAAa,GAEf,CACEH,GAAI,EACJC,KAAM,YACNC,UAAW,aACXC,YAAa,IAuDjB,EAnDmB,WACjB,IAAMC,GAAUC,EAAAA,EAAAA,UAAQ,kBAAMjB,CAAO,GAAE,IAEvC,GAA6EkB,EAAAA,EAAAA,UAC3E,CACEF,QAAAA,EACAL,KAAAA,EACAQ,aAAc,CAAEC,UAAW,EAAGC,SAAU,IAE1CC,EAAAA,gBACAC,EAAAA,UACAC,EAAAA,eARMC,EAAa,EAAbA,cAAeC,EAAiB,EAAjBA,kBAAmBC,EAAY,EAAZA,aAAcC,EAAI,EAAJA,KAAMC,EAAU,EAAVA,WAU9D,OACE,SAACC,EAAA,EAAQ,CAACC,GAAI,CAAEC,GAAI,GAAKC,MAAM,YAAYC,WAAW,SAACC,EAAA,EAAM,CAACzB,QAAQ,WAAU,+BAA4B,UAC1G,SAAC0B,EAAA,EAAc,WACb,UAACC,EAAA,GAAK,kBAAKZ,KAAe,eACxB,SAACa,EAAA,EAAS,UACPX,EAAaY,KAAI,SAACC,GAAW,OAC5B,SAACC,EAAA,GAAQ,kBAAKD,EAAYE,uBAAqB,aAC5CF,EAAYxC,QAAQuC,KAAI,SAACI,GAAM,OAC9B,SAACC,EAAA,GAAS,kBAAKD,EAAOE,eAAe,CAAEC,MAAO,CAAEC,SAAUJ,EAAOI,SAAU5C,MAAOwC,EAAOxC,UAAU,aAChGwC,EAAOK,OAAO,YACL,MAEL,OAGf,SAACC,EAAA,GAAS,kBAAKvB,KAAmB,aAC/BE,EAAKW,KAAI,SAACW,GAET,OADArB,EAAWqB,IAET,SAACT,EAAA,GAAQ,gBAACV,GAAI,CAAEoB,SAAU,SAAcD,EAAIE,eAAa,aACtDF,EAAIG,MAAMd,KAAI,SAACe,GACd,OAAO,SAACV,EAAA,GAAS,kBAAKU,EAAKC,gBAAc,aAAGD,EAAKN,OAAO,UAC1D,MAGN,cAWZ,ECjGA,EAJkB,WAChB,OAAO,SAAC,EAAU,GACpB,C","sources":["pages/AuthenticatedPages/Orders/OrderTable.js","pages/AuthenticatedPages/Orders/index.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\n\r\n// material-ui\r\nimport { TableContainer, Table, TableBody, TableCell, TableHead, TableRow, Chip, Button } from '@mui/material';\r\n\r\n//project import\r\n\r\nimport { useTable, usePagination, useGlobalFilter, useSortBy } from 'react-table';\r\nimport MainCard from '../../../components/MainCard';\r\n\r\nconst headers = [\r\n  {\r\n    Header: 'Item',\r\n    accessor: 'item',\r\n    width: 'auto'\r\n  },\r\n  {\r\n    Header: 'Order Date',\r\n    accessor: 'orderdate',\r\n    width: 'auto'\r\n  },\r\n  {\r\n    Header: 'Status',\r\n    accessor: 'orderstatus',\r\n    width: 'auto',\r\n\r\n    // eslint-disable-next-line\r\n    Cell: ({ value }) => {\r\n      switch (value) {\r\n        case 2:\r\n          return <Chip color=\"success\" label=\"Shipped\" size=\"small\" variant=\"light\" />;\r\n        case 1:\r\n          return <Chip color=\"warning\" label=\"Processing\" size=\"small\" variant=\"light\" />;\r\n        case 0:\r\n        default:\r\n          return <Chip color=\"warning\" label=\"info\" size=\"small\" variant=\"light\" />;\r\n      }\r\n    }\r\n  }\r\n];\r\nconst data = [\r\n  {\r\n    id: 1,\r\n    item: 'ID Card',\r\n    orderdate: '01/02/2023',\r\n    orderstatus: 2\r\n  },\r\n  {\r\n    id: 1,\r\n    item: 'Wristband',\r\n    orderdate: '18/02/2023',\r\n    orderstatus: 1\r\n  }\r\n];\r\n\r\nconst OrderTable = () => {\r\n  const columns = useMemo(() => headers, []);\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, page, prepareRow } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0, pageSize: 5 }\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n  return (\r\n    <MainCard sx={{ mt: 2 }} title=\"My Orders\" secondary={<Button variant=\"outlined\">Place new request</Button>}>\r\n      <TableContainer>\r\n        <Table {...getTableProps()}>\r\n          <TableHead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <TableCell {...column.getHeaderProps({ style: { minWidth: column.minWidth, width: column.width } })}>\r\n                    {column.render('Header')}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableHead>\r\n          <TableBody {...getTableBodyProps()}>\r\n            {page.map((row) => {\r\n              prepareRow(row);\r\n              return (\r\n                <TableRow sx={{ fontSize: '1rem' }} {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return <TableCell {...cell.getCellProps()}>{cell.render('Cell')}</TableCell>;\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {/* <TableRow>\r\n              <TableCell sx={{ p: 2 }} colSpan={7}>\r\n                <TablePagination gotoPage={gotoPage} rows={rows} setPageSize={setPageSize} pageIndex={pageIndex} pageSize={pageSize} />\r\n              </TableCell>\r\n            </TableRow> */}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default OrderTable;\r\n","import React from 'react';\r\nimport OrderTable from './OrderTable';\r\n\r\nconst Dashboard = () => {\r\n  return <OrderTable />;\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["headers","Header","accessor","width","Cell","value","Chip","color","label","size","variant","data","id","item","orderdate","orderstatus","columns","useMemo","useTable","initialState","pageIndex","pageSize","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","MainCard","sx","mt","title","secondary","Button","TableContainer","Table","TableHead","map","headerGroup","TableRow","getHeaderGroupProps","column","TableCell","getHeaderProps","style","minWidth","render","TableBody","row","fontSize","getRowProps","cells","cell","getCellProps"],"sourceRoot":""}